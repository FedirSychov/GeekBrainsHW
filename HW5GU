Task 01

'''
1. Создать программно файл в текстовом формате, записать в него построчно данные,
вводимые пользователем. Об окончании ввода данных свидетельствует пустая строка.
'''

try:

    # открытие файла
    with open('test_file.txt', 'w') as file:

        # цикл ввода
        while True:
            line1 = input("Введите строку, которую хотите записать в файл")

            # условие завершения
            if line1 == "":
                break
            else:

                # печать в файл
                print(line1, file=file)
except:
    print("error")


====================================================================

Task 2

'''
2. Создать текстовый файл (не программно), сохранить в нем несколько строк,
выполнить подсчет количества строк, количества слов в каждой строке.
'''

File: Test_file2

Yes
He is right
right back

Program:

try:

    # открытие файла
    with open('Test_file2.txt', 'r') as file_read:

        # получение списка строк
        lines = file_read.readlines()
        print(f"Список строк для проверки: {lines}")

        # вывод количества строк в файле
        print(f"Количество строк: {len(lines)}")

        # вывод количества строк в каждой строке и проверка на наличие ненужных слов \n
        for i in range(len(lines)):
            line1 = lines[i].split(' ')
            if line1.count("\n"):
                num_of_words = len(line1) - 1
            else:
                num_of_words = len(line1)
            print(f"В {i}-й строке {num_of_words} слов")
except:
    print("error")


Results:

Список строк для проверки: ['Yes\n', 'He is right\n', 'right back \n']
Количество строк: 3
В 0-й строке 1 слов
В 1-й строке 3 слов
В 2-й строке 2 слов


====================================================================

Task 3

'''
3. Создать текстовый файл (не программно), построчно записать фамилии
сотрудников и величину их окладов (не менее 10 строк). Определить,
кто из сотрудников имеет оклад менее 20 тыс., вывести фамилии этих
сотрудников. Выполнить подсчет средней величины дохода сотрудников.

Пример файла:

Иванов 23543.12
Петров 13749.32
'''

File: Test_file3

Иванов 23543.12
Петров 13749.32
Качалов 78999.23
Панченко 62956.22
Прокопенко 12333.99
Павленко 33412.23
Терехов 110653.68
Телефонов 12333.32
Попов 13523.11
Мершалов 15999.99

Program:

try:
    with open('Test_file3.txt', 'r', encoding="utf-8") as file_read:
        lines = file_read.readlines()

        # проверка данных
        print(lines)
        print("Сотрудники, зарплата которых ниже 20 000:")

        # проверка зарплаты сотрудника
        for line in lines:
            line1 = line.split(' ')

            # проверка наличия переноса строки
            try:
                if float(line1[1]) < 20000:
                    print(line1[0])
            except:
                if float(line1[1][1:len(line1[1])-2]) < 20000:
                    print(line1[0])
        print("Средний доход сотрудника: ")
        sum = 0

        # подсчет средней зарплаты
        for line in lines:
            line1 = line.split(' ')
            try:
                sum += float(line1[1])
            except:
                sum += float(line1[1][1:len(line1[1]) - 2])
        print(sum/len(lines))
except:
    print("error")


Results:

['Иванов 23543.12\n', 'Петров 13749.32\n', 'Качалов 78999.23\n', 'Панченко 62956.22\n', 'Прокопенко 12333.99\n', 'Павленко 33412.23\n', 'Терехов 110653.68\n', 'Телефонов 12333.32\n', 'Попов 13523.11\n', 'Мершалов 15999.99']
Сотрудники, зарплата которых ниже 20 000:
Петров
Прокопенко
Телефонов
Попов
Мершалов
Средний доход сотрудника: 
37750.421


====================================================================

Task 3.2

'''
Создать (не программно) текстовый файл со следующим содержимым:
One — 1
Two — 2
Three — 3
Four — 4

Необходимо написать программу, открывающую файл на чтение и
считывающую построчно данные. При этом английские числительные
должны заменяться на русские. Новый блок строк должен записываться
в новый текстовый файл.
'''

File to read: Test_file3-2-1

One — 1
Two — 2
Three — 3
Four — 4

Program: 

dict = {
    "One": "Один",
    "Two": "Два",
    "Three": "Три",
    "Four": "Четыре",
    "Five": "Пять"
}

try:
    # открытие файла для чтения
    file_read = open('Test_file3-2-1.txt', 'r')
    # чтение строк
    lines = file_read.readlines()
    file_read.close()
    # открытие файла для записи
    file_write = open('Test-file3-2-2.txt', 'w', encoding="utf-8")
    j = 0
    # работа со строками
    for line in lines:
        line1 = line.split(' ')
        j += 1
        # присваивание значения по ключу
        if line1[0] in dict.keys():
            line2 = dict[line1[0]]
        # записываем в файл
        print(f"{line2} - {j}", file=file_write, )
    file_write.close()
except:
    print("error")


Results:

File to write:

Name: Test-file3-2-2

Один - 1
Два - 2
Три - 3
Четыре - 4


====================================================================

Task 4

'''
4. Создать (программно) текстовый файл, записать в него
программно набор чисел, разделенных пробелами. Программа
должна подсчитывать сумму чисел в файле и выводить ее на экран.
'''

File:Test-file4

1 2 3 4 5 6 7 8

Program: 

try:

    # программная запись чисел в файл
    with open('Test-file4', 'w') as file_write:
        print("1 2 3 4 5 6 7 8", file=file_write)

    # чтение файла
    with open('Test-file4', 'r') as file:

        # разделение по числам
        nums = file.read().split(' ')
        summ = 0

        # сложение всех чисел
        try:
            for num in nums:
                summ += int(num)
        except:
            print("Ошибка ввода")
        print(f"Сумма чисел в файле равна {summ}")
except:
    print("error")


Results:

Сумма чисел в файле равна 36


====================================================================

Task 5

'''
5. Необходимо создать (не программно) текстовый файл, где каждая строка описывает
учебный предмет и наличие лекционных, практических и лабораторных занятий по этому
предмету и их количество. Важно, чтобы для каждого предмета не обязательно были все
типы занятий. Сформировать словарь, содержащий название предмета и общее количество
занятий по нему. Вывести словарь на экран.
Примеры строк файла: Информатика: 100(л) 50(пр) 20(лаб).
Физика: 30(л) — 10(лаб)
Физкультура: — 30(пр) —
Пример словаря: {“Информатика”: 170, “Физика”: 40, “Физкультура”: 30}
'''

File: Test-file5

Информатика: 100(л) 50(пр) 20(лаб).
Физика: 30(л) — 10(лаб)
Физкультура: — 30(пр) —

Program:

dict = {}

try:
    # открываем файл для чтения в кодировке, содержащий русские символы
    with open('Test-file5', 'r', encoding="utf-8") as file_read:
        lines = file_read.readlines()

        # работаем со строками
        for line in lines:
            # делим по двоеточию
            line_cut = line.split(':')
            # создаем строковую переменную для чтения чисел
            num = ""
            # сумма занятий для каждого предмета
            summ = 0
            # цикл для подсчета числовых символов
            for i in range(len(line_cut[1])):
                # если данный символ - число, а следующий - тоже число, то записываем в строковую переменную
                if line_cut[1][i].isdigit() and line_cut[1][i+1].isdigit():
                    num += line_cut[1][i]
                # если данный символ - число, а следующий - не число, то записываем символ, присваиваем и обнуляем
                elif line_cut[1][i].isdigit() and not(line_cut[1][i+1].isdigit()):
                    # прибавляем цифру к строке для создания полноценного числа
                    num += line_cut[1][i]
                    # прибавляем к сумме конвертированное число
                    summ += int(num)
                    # print(num)
                    # print(summ)
                    # обнуляем строку для дальнейших чисел
                    num = ""
                # создаем запись в словаре
                dict[line_cut[0]] = summ
                # обнуляем сумму для последующих предметов
                sum = 0
        print(dict)
except:
    print("error")


Results:

{'Информатика': 170, 'Физика': 40, 'Физкультура': 30}


====================================================================

Task 7

'''
7. Создать вручную и заполнить несколькими строками текстовый файл,
в котором каждая строка должна содержать данные о фирме: название,
форма собственности, выручка, издержки.
Пример строки файла: firm_1 ООО 10000 5000.

Необходимо построчно прочитать файл, вычислить прибыль каждой компании,
а также среднюю прибыль. Если фирма получила убытки, в расчет средней прибыли ее не включать.
Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями,
а также словарь со средней прибылью. Если фирма получила убытки, также добавить ее в словарь
(со значением убытков).
Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].

Итоговый список сохранить в виде json-объекта в соответствующий файл.
Пример json-объекта:

[{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]
'''

File: Test-file7

firm_1 ООО 10000 5000
firm_2 ООО 500000 350000
firm_3 ООО 200000 23000
firm_4 OOO 600000 330000
firm_5 OOO 300000 350000

Program:

# словарь с фирмами
dict = {}

# открытие файла и чтение
with open('Test-file7', 'r') as file_read:
    lines = file_read.readlines()
    # обработка строк
    for line in lines:
        line_cut = line.split(' ')
        # вычисление выручки и запись в словарь
        dict[line_cut[0]] = float(line_cut[2]) - float(line_cut[3])

    # данные для среднего арифметического
    summ = 0
    num = 0
    for i in dict:
        # если выручка положительная, считаем. Иначе - не входит в подсчет
        if dict[i] > 0:
            summ += float(dict[i])
            num += 1
    # формирование финального списка
    list_out = [dict, {"average_profit": summ/num}]
    print(list_out)


Results:

[{'firm_1': 5000.0, 'firm_2': 150000.0, 'firm_3': 177000.0, 'firm_4': 270000.0, 'firm_5': -50000.0}, {'average_profit': 150500.0}]