'''
1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора
класса (метод init()), который должен принимать данные (список списков)
для формирования матрицы.
Подсказка: матрица — система некоторых математических величин,
расположенных в виде прямоугольной схемы.
Примеры матриц: см. в методичке.

Следующий шаг — реализовать перегрузку метода str() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода add() для реализации операции сложения двух объектов
класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки
первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.
'''


# класс матрицы
class Matrix:
    _vertex: list

    # перегруженный конструктор
    def __init__(self, lists: list):
        self._vertex = lists

    # вывод матрицы
    def __str__(self):
        return f"{self._vertex[0][0]} {self._vertex[0][1]} {self._vertex[0][2]}\n{self._vertex[1][0]} {self._vertex[1][1]} {self._vertex[1][2]}"

    # сложение матриц
    def __add__(self, other):
        new_list = [[0, 0, 0], [0, 0, 0]]
        for i in range(6):
            new_list[i // 3][i % 3] = self._vertex[i // 3][i % 3] + other._vertex[i // 3][i % 3]
        return Matrix(new_list)


matrix = Matrix([[1, 2, 3], [4, 5, 6]])
print(matrix)
print()
matrix2 = Matrix([[3, 3, 3], [4, 5, 6]])
print(matrix + matrix2)
